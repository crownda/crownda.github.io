<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>学习Git的第一天</title>
    <link href="/2023/11/01/%E5%AD%A6%E4%B9%A0Git%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <url>/2023/11/01/%E5%AD%A6%E4%B9%A0Git%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<h3 id="Git-分布式版本控制工具"><a href="#Git-分布式版本控制工具" class="headerlink" title="Git 分布式版本控制工具"></a>Git 分布式版本控制工具</h3><p>####为什么需要版本控制工具？</p><p>一个项目的编写往往需要多人长期合作完成，在此期间避免不了各种问题。比如写完一个模块要上线了结果电脑死机，硬盘完全损毁；某天你喝醉了心血来潮写了一堆不合格的代码写入了项目中，你还忘记那些是当时写入的等各种情况。这时候就需要一个版本控制工具解决类似场景问题。</p><h4 id="版本控制器的方式"><a href="#版本控制器的方式" class="headerlink" title="版本控制器的方式"></a>版本控制器的方式</h4><p><code>集中式版本控制工具</code> </p><p>版本库集中存放在中央服务器，团队中的每个成员都可以从服务器上下载代码，但必须联网（局域网或互联网）实现，个人修改后提交到中央版本库。常见的有<code>SVN</code>和<code>CVS</code></p><p><code>分布式版本控制工具</code></p><p>分布式版本控制系统没有“中央服务器”，而是把版本库存放在每个人的电脑上，所以工作时不需要联网，多人协作只需要把各自的修改互相推送就可以看到别人的修改了。常见的<code>git</code></p><p><code>简结</code> 集中式版本控制工具的应用类似每个人从厂里（中央服务器）拿回（下载）原料（代码），加工好（修改完）后提交给厂里。缺点是如果厂（中央的版本库）没了就啥都没了，也就是备份问题未完全解决。分布式版本控制工具则是鸡蛋不放一个篮子的道理。类比一副电子画，每个人的电脑都有，添加一笔后和其他人交流。</p><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><p>Git不需要有中央服务器，设置中央服务器的目的是方便大家交换修改。把它当做一个只交流修改本身不工作的时刻在线的同事就行。Git是Linux的缔造者之一为了管理Linux内核开发而开发的开源版本控制软件。</p><h4 id="Git常见指令"><a href="#Git常见指令" class="headerlink" title="Git常见指令"></a>Git常见指令</h4><p><code>git init</code> 初始化当前目录为一个Git本地仓库，在当前目录下会生成一个<code>.git</code> 的文件夹，默认生成master分支</p><p><code>git add 文件名 </code> (工作区  &#x3D;&#x3D;&#x3D;&gt;   暂存区，文件名用.代替的话就是工作区所有修改文件&#x3D;&#x3D;&#x3D;&gt;暂存区)</p><p><code>git commit</code> (暂存区  &#x3D;&#x3D;&#x3D;&gt;   本地仓库)    <code>git commit  -m  &quot;提交内容描述&quot;</code> (暂存区  &#x3D;&#x3D;&#x3D;&gt;  本地仓库，在Git日志里为本次操作命名)</p><p><code>git status</code> 查看修改的状态（在工作区或暂存区的）</p><p><code>git log</code> 查看提交日志，日志里每个操作对对应一个哈希值，因为git的智能处理我们不需要用完整的哈希值去完成其他操作</p><p><code>git reset</code> 暂存区的修改恢复到工作区</p><p><code>git reset &lt;location&gt;</code> 当前分支记录回退几个提交记录来撤销改动。</p><p><code>git revert</code> 适合需要回退版本并提交给别人看，会提交撤销之前的提交的新提交，提交后新建一个节点，该节点和需要回退到的节点一样。</p><p><code>git checkout -b &lt;new-branch-name&gt;</code> 新建分支（branch）并切换到该分支，若去掉参数<code>-b</code> 就仅切换。实际切换的HEAD的指向，也可以切换到某次提交。配合^和~number使用更好</p><p><code>git branch -a</code> 查看当前本地和远程有那些分支，若去掉参数<code>-a</code> 就查看当前本地有那些分支。</p><p><code>git branch &lt;branch-name&gt; &lt;location&gt;</code> 强制修改分支位置</p><p><code>git branch &lt;new-branch-name&gt;</code> 创建新分支</p><p><code> git merge &lt;branch-name&gt;</code> 将该分支合并到master分支</p><p><code>git rebase &lt;branch-name&gt;</code> 将该分支以另一种方式合并到另一个分支</p><p><code>git rebase -i &lt;参数值&gt; </code> 打开交互式UI界面操作提交记录</p><p><code>git pull</code> 从远程仓库拉取最新的代码到本地的仓库并合并到当前分支</p><p><code>git fetch</code> 从远程仓库获取本地仓库中缺失的提交</p><p><code>git cherry-pick &lt;提交号&gt;</code> 将某个提交复制粘贴到当前位置下</p><p><code>git clone &lt;url&gt; &lt;file-name&gt;</code> 克隆（下载）一个地址为url的远程Git仓库到本地，将其存放在file-name文件夹里</p>]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo如何编写文章</title>
    <link href="/2023/11/01/hexo%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%96%87%E7%AB%A0/"/>
    <url>/2023/11/01/hexo%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h4 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h4><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 </p><figure class="highlight plaintext"><figcaption><span><https://hexo.io/zh-cn/docs/></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs 技术文档```"><br>#### 编写文章<br><br>首先在博客项目所在目录打开```Git Bash``` ，输入<br><br>```shell<br>$ hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><p>该命令会在<code>source</code> 文件夹或其子文件夹内生成一个md文件，而我们想写的文章内容就写在md文件内。</p><p>相关说明：</p><p><code>layout</code> 布局</p><p>hexo有三种默认布局：post，page，draft</p><p>不同布局的md文件会存储在不同的路径下</p><table><thead><tr><th>layout（布局）</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>source&#x2F;_posts</td></tr><tr><td>page</td><td>source</td></tr><tr><td>draft</td><td>source&#x2F;_draft</td></tr></tbody></table><p>其中post为默认布局，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。 </p><p><code>title</code> 文件名称</p><p>生成的md文件默认使用title作为文件名，可以通过修改 <code>_config.yml</code> 中的 <code>new_post_name </code> 参数来指定新建post布局文件的命名方法。 </p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td><code>:title</code></td><td>标题（小写，空格将会被替换为短杠）</td></tr><tr><td><code>:year</code></td><td>建立的年份，比如， <code>2015</code></td></tr><tr><td><code>:month</code></td><td>建立的月份（有前导零），比如， <code>04</code></td></tr><tr><td><code>:i_month</code></td><td>建立的月份（无前导零），比如， <code>4</code></td></tr><tr><td><code>:day</code></td><td>建立的日期（有前导零），比如， <code>07</code></td></tr><tr><td><code>:i_day</code></td><td>建立的日期（无前导零），比如， <code>7</code></td></tr></tbody></table><p><code>layout</code> 草稿</p><p><code>Scaffold</code> 模板</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2023/11/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/11/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>经过一天的报错纠错，终于在今天完成了第一篇博客的编写，不容易啊QAQ</p>]]></content>
    
    
    
    <tags>
      
      <tag>diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/31/hello-world/"/>
    <url>/2023/10/31/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
